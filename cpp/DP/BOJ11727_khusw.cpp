/*
    DP 타일링 두번째 문제
    BOJ 11727 번 2*N 타일링 2
    https://www.acmicpc.net/problem/11727

    2*N 직사각형을 2*1, 2*2 타일로 채우는 방법의 수를 구하는 프로그램 작성

    이 경우 가능한 가짓수는 3가지임

    n - 1 에 붙는 2 * 1 직사각형 한개
    n - 2 에 붙는 2 * 2 정사각형 한개
    n - 2 에 붙는 1 * 2 직사각형 두개

    그러므로 이때의 점화식은
    D(N) = D(N - 1) + 2 * D(N - 2) 가 된다고 볼 수 있다.
*/

#include <stdio.h>

int arr[1001];

int dp(int x)
{
    if (x == 1)
        return 1;
    if (x == 2)
        return 3;
    // x = 2 일때 3이 리턴되는 이유는
    // 2 * 1 직사각형 2개 붙는 경우의수 한개, 1 * 2 직사각형 2개 붙는 경우의 수 한개,
    // 2 * 2 정사각형 1개 붙는 경우의수 한개, 총 3개의 경우의 수가 발생하기 때문.
    if (arr[x] != 0)
        return arr[x];
    return arr[x] = (dp(x - 1) + 2 * dp(x - 2)) % 10007;
    // 여기서도 10007 로 나누는 이유는 문제에서 10007로 나눈 나머지를 출력하라 했기 때문
    // 여기서도 10007 로 나누는 것이 오버플로우 발생을 예방하기 위해서 이다.
}

int main()
{
    int num;
    scanf("%d", &num);
    printf("%d", dp(num));
}