/*
    에라토스테네스의 체를 이용한 소수 판별
    에라토스테네스의 체를 이용해서 소수를 판별할 경우
    단순히 한 두개의 수를 소수인지 아닌지 판별할때 쓰기보다는
    대량의 수가 주어질때 그 수들이 전부 소수인지 아닌지 판별하기 위해서
    쓰이는 것이 바로 에라토스테네스의 체 이다.

    이 에라토스테네스의 체는 가장 먼저 소수를 판별할 범위만큼 배열을 할당하여
    그 인덱스에 해당하는 값을 넣어주는 방식이다.

    예를들어, 1 ~ 25 까지의 수 중 소수를 판별하겠다 하면

    먼저 배열을 하나 만들고 (25까지 담을 수 있는 배열 생성, 여기선 배열 크기 26)
    인덱스 1 에는 1, 인덱스 2 에는 값 2, 3은 3 ... 쭉 자기 인덱스 번호 대로
    값을 넣어준다

    그리고 2부터 시작하여 (1은 소수 아니므로 제외)
    2의 배수를 지운다 (시작 숫자인 2는 제외)

    그 다음은 3의 배수를 지우고 (시작숫자인 3은 제외)

    그 다음 4는 이미 2의 배수 지울때 지워진 숫자이므로 건너뛴다
    (4말고도 뒤에 나오게될 다른 수들중 이미 지워진 수들은 전부 건너뜀)

    이 과정을 쭉 하게 되면,
    남아있는 숫자들이 결국엔 소수가 됨. (주의 1은 제외임)
*/

#include <stdio.h>

int number = 100000; // 10만개의 수에서 소수판별
int a[100001];

void primeNumberSieve()
{ // * sieve = 체
    for (int i = 2; i <= number; i++)
    {
        a[i] = i; // 초기화 작업
    }

    for (int i = 2; i <= number; i++)
    {
        if (a[i] == 0)
            continue; // 0 은 지워진 수라는 의미.
        for (int j = i + i; j <= number; j += i)
        {
            a[j] = 0;
        }
    }
    for (int i = 2; i <= number; i++)
    {
        if (a[i] != 0)
            printf("%d ", a[i]);
    }
}

int main()
{
    primeNumberSieve();
}